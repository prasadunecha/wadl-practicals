//install mongodb compass ->  sudo dpkg -i mongodb-c
//install all below 
//npm init -y  // npm i express mongoose//dotenv//nmp i nodemon//nodemon erver.js//create folder views with file index.ejs

//server.js

const express = require("express");
const dotenv = require("dotenv")
const mongoose = require("mongoose");
const StudentMarks = require("./models/StudentMarks");
const ejs = require("ejs");


// INITIALIZATION
const app = express();
app.set("view engine", "ejs");
dotenv.config();

mongoose.connect("mongodb://localhost:27017/Student")
    .then(() => {
        console.log("MONGODB CONNNECTED");
    })
    .catch(err => console.log(err));


// MIDDLEWARE
app.use(express.json());
app.use(express.urlencoded({ extended: true }));


// ROUTES
app.get("/", (req, res) => {
    res.send("API is running!");
});


// QUERY : A, B, C
app.get("/insert-documents", async (req, res) => {
    try {
        const documents = [
            {
                Name: "Maitreya Awad",
                Roll_No: 33205,
                WAD_Marks: 20,
                CC_Marks: 18,
                DSBDA_Marks: 28,
                CNS_Marks: 25,
                AI_Marks: 15,
            },
            {
                Name: "Meher Datey",
                Roll_No: 33220,
                WAD_Marks: 21,
                CC_Marks: 16,
                DSBDA_Marks: 23,
                CNS_Marks: 21,
                AI_Marks: 24,
            },
            {
                Name: "Prasad Unecha",
                Roll_No: 33278,
                WAD_Marks: 29,
                CC_Marks: 20,
                DSBDA_Marks: 25,
                CNS_Marks: 17,
                AI_Marks: 19,
            },
            {
                Name: "Khalid Quadri",
                Roll_No: 33240,
                WAD_Marks: 22,
                CC_Marks: 20,
                DSBDA_Marks: 29,
                CNS_Marks: 18,
                AI_Marks: 19,
            },
            {
                Name: "Adwait Bandal",
                Roll_No: 33206,
                WAD_Marks: 27,
                CC_Marks: 15,
                DSBDA_Marks: 19,
                CNS_Marks: 20,
                AI_Marks: 29,
            },
        ]

        const result = await StudentMarks.insertMany(documents);
        console.log(result);

        res.send("Documents inserted successfully!\n");
        // await StudentMarks.deleteMany({ "Roll_No": { $gt: 33201 } });
    } catch (err) {
        res.status(400).send("Some error occured");
        console.log(err);
    }
});


// QUERY : D, J
app.get("/documents", async (req, res) => {
    try {
        const documentsCount = await StudentMarks.countDocuments();

        StudentMarks.find({})
            .then(students => {
                res.render("index", {
                    studentsList: students
                });
            })
            .catch(err => {
                // Handle the error
                console.error(err);
            });

    } catch (error) {
        res.status(400).send("Some error occured in catch");
        console.log(error);
    }
});


// QUERY : E
app.get("/dsbda-marks", (req, res) => {
    try {
        StudentMarks.find({ "DSBDA_Marks": { $gt: 20 } })
            .then(students => {
                res.render("index", {
                    studentsList: students
                });
            })
            .catch(err => {
                res.status(400).send("Some error occured!");
            });
    } catch (error) {
        res.status(400).send(error);
    }
});


// QUERY : F
app.get("/update-marks", async (req, res) => {
    try {
        await StudentMarks.updateOne({ Name: "Maitreya Awad" }, { CC_Marks: 26, WAD_Marks: 28, DSBDA_Marks: 26, CNS_Marks: 29, AI_Marks: 27, });

        res.send("Updated successfully");
    } catch (error) {
        res.status(400).send(error);
    }
})


// QUERY : G
app.get("/high-marks", (req, res) => {
    try {
        StudentMarks.find({
            "WAD_Marks": { $gt: 25 },
            "DSBDA_Marks": { $gt: 25 },
            "CNS_Marks": { $gt: 25 },
            "CC_Marks": { $gt: 25 },
            "AI_Marks": { $gt: 25 },
        })
            .then(students => {
                res.render("index", {
                    studentsList: students
                })
            })
            .catch(error => {
                res.status(400).send(error);
            })
    } catch (error) {
        res.status(400).send(error);
    }
});


// QUERY : H
app.get("/low-marks", (req, res) => {
    try {
        StudentMarks.find({ $and: [{ "DSBDA_Marks": { $lt: 24 } }, { "CNS_Marks": { $lt: 24 } }] })
            .then(students => {
                res.render("index", {
                    studentsList: students
                })
            })
            .catch(error => {
                res.status(400).send(error);
            })
    } catch (error) {
        res.status(400).send(error);
    }
});


// QUERY : I
app.get("/remove-student", async (req, res) => {
    try {
        await StudentMarks.deleteOne({ Name: "Khalid Quadri" });

        res.send("Removed student successfully!");
    } catch (error) {
        res.status(400).send(error);
    }
});


// PORT CONFIG
const PORT = process.env.PORT || 5000;

app.listen(PORT, () => {
    console.log(`App listening on PORT : ${PORT}`);
});



//views folder- index.ejs

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ"
      crossorigin="anonymous"
    />
    <title>Homepage</title>
  </head>
  <body>
    <div class="container p-5">
      <h1 class="fw-bold">STUDENT DATABASE :</h1>
      <hr />
      <h4>
        Total number of documents in database is : <%=
        Object.keys(studentsList).length; %>
      </h4>
      <hr />

      <table class="table">
        <thead>
          <tr>
            <th>Roll_No</th>
            <th>Name</th>
            <th>WAD_Marks</th>
            <th>CC_Marks</th>
            <th>DSBDA_Marks</th>
            <th>CNS_Marks</th>
            <th>AI_Marks</th>
          </tr>
        </thead>
        <tbody>
          <% studentsList.forEach(student => {%>
          <tr>
            <td><%= student.Roll_No %></td>
            <td><%= student.Name %></td>
            <td><%= student.WAD_Marks %></td>
            <td><%= student.CC_Marks %></td>
            <td><%= student.DSBDA_Marks %></td>
            <td><%= student.CNS_Marks %></td>
            <td><%= student.AI_Marks %></td>
          </tr>
          <% }) %>
        </tbody>
      </table>
    </div>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe"
      crossorigin="anonymous"
    ></script>
  </body>
</html>


//models- StudentMarks.js

const mongoose = require("mongoose");

const studentMarksSchema = new mongoose.Schema({
    Name: String,
    Roll_No: Number,
    WAD_Marks: Number,
    CC_Marks: Number,
    DSBDA_Marks: Number,
    CNS_Marks: Number,
    AI_Marks: Number,
});

const StudentMarks = mongoose.model("StudentMarks", studentMarksSchema);

module.exports = StudentMarks;

//.env

PORT=3000
